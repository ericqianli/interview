public class Solution {
    public int search(int[] A, int target) {
        
        if (A.length == 0)
            return -1;
            
        int offset = find(A, 0, A.length-1) + 1;
        
        int ret = search(A, A.length, 0, A.length-1, target, offset);
        ret = (ret == -1) ? (-1) : (ret + offset) % A.length;
        
        return ret;
    }
    
    public int find(int[] num, int s, int e)
    {
        if (s > e)
            return -1;
            
        int m = (s + e)/2;
        
        if (m == num.length-1)
            return -1;
        else if (num[m] > num[m+1])
            return m;
            
        if (num[s] > num[m])
            return find(num, s, m);
        if (num[m+1] > num[e])
            return find(num, m+1, e);
            
        return -1;
    }
    
    public int search(int[] num, int l, int s, int e, int t, int o)
    {
        if (s > e)
            return -1;
            
        int m = (s + e)/2;
        
        if (num[(m+o)%l] == t)
            return m;
            
        if (t < num[(m+o)%l])
            return search(num, l, s, m-1, t, o);
        else
            return search(num, l, m+1, e, t, o);
    }
}
