public class Solution {
    
    ArrayList<String> ret = new ArrayList<String>();
    
    public ArrayList<String> restoreIpAddresses(String s) {
        
        ret.clear();
        
        if (s.length() == 0)
            return ret;
            
        find(s, 4, new ArrayList<String>());
        
        return ret;
        
    }
    
    public void find(String s, int d, ArrayList<String> path)
    {
        if (d == 0)
        {
            if (s.length() == 0)
            {
                String r = "";
                for (String p : path)
                    r += p + ".";
                ret.add(r.substring(0,r.length()-1));
            }
            
            return;
        }
            
        if (s.length() >= 1)
        {
            path.add(s.substring(0,1));
            find(s.substring(1,s.length()), d-1, path);
            path.remove(path.size()-1);
        }
        
        if (s.length() >= 2)
        {
            if (s.charAt(0) != '0')
            {
                path.add(s.substring(0,2));
                find(s.substring(2, s.length()), d-1, path);
                path.remove(path.size()-1);
            }
        }
        
        if(s.length() >= 3)
        {
            if (s.charAt(0) != '0')
            {
                int val = Integer.parseInt(s.substring(0,3));
                if (val <= 255)
                {
                    path.add(s.substring(0,3));
                    find(s.substring(3, s.length()), d-1, path);
                    path.remove(path.size()-1);
                }
            }
        }

    }
}
