public class Solution {
    
    ArrayList<ArrayList<Integer>> ret = new ArrayList<ArrayList<Integer>>();
    
    public ArrayList<ArrayList<Integer>> combinationSum(int[] candidates, int target) {
        
        ret.clear();
        
        if (candidates.length == 0)
            return ret;
            
        Arrays.sort(candidates);
        
        findcombo(candidates, new ArrayList<Integer>(), 0, target);
        
        return ret;
        
    }
    
    public void findcombo(int[] cand, ArrayList<Integer> list, int index, int target)
    {
        if (target == 0)
        {
            ArrayList<Integer> r = new ArrayList<Integer>(list);
            ret.add(r);
            return;
        }
        
        if (target < cand[index])
            return;
        
        for (int i=index; i<cand.length; i++)
        {
            if (cand[i] <= target)
            {
                list.add(cand[i]);
                
                findcombo(cand, list, i, target-cand[i]);
                
                list.remove(list.size()-1);
            }
        }
        
    }
}
