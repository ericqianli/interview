/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        
        if (l1 == null)
            return l2;
        if (l2 == null)
            return l1;
            
        ListNode head = (l1.val < l2.val) ? l1 : l2;
        ListNode pre = null;
        while (l1 != null || l2 != null)
        {
            if (l1 == null || (l2 != null && l2.val <= l1.val))
            {
                if (pre != null)
                    pre.next = l2;
                pre = l2;
                l2 = l2.next;
                continue;
            }
            if (l2 == null || (l1 != null && l1.val < l2.val))
            {
                if (pre != null)
                    pre.next = l1;
                pre = l1;
                l1 = l1.next;
                continue;
            }
        }
        
        return head;
    }
}
